1. How to use classes/objects
It's important for OOP and necessary for programming in most languages without being inefficient

2. Class constructors
They are a necessary part of using object implementation (to tell the object/class which variables to be fed)

3. Basic CS principles that we covered at the beginning of the year, like abstraction and encapsulation
Mr. Davis emphasized their importance because they are essential for learning and problem-solving etc.

4. Some basics of Slick
We used it for a while and it was part of our learning of classes, objects, problem-solving, etc.

5. Assembly/maybe HRM
Low-level languages are important for CS since they deal with basic computer manipulization / software-to-hardware translation

6. Basic data types
We learned them early on and they are necessary for using most languages

7.For loops and/or conditional statements
They are another basic necessary part of OOP/coding

8. Getters/setters and private variables
Without them a lot of variables you would want to use if you had similar classes would interfere if they were public

9. Arrays vs ArrayLists
Arrays are an important part of most coding languages, and ArrayLists are useful in Java or Slick 

10. String manipulation and substrings/arrays 
We practiced this on codingbat, these are useful any time you want to do something with a String in java, like someone's name/character's name for interactivity
 
